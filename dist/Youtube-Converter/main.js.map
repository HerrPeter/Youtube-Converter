{"version":3,"sources":["./src/environments/environment.ts","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/convert.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/const.ts","./src/app/sse.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ConvertService } from '../convert.service';\r\n\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\n\r\nenum loadingMode {\r\n  none = 'none',\r\n  buffer = 'buffer',\r\n  unsure = 'indeterminate',\r\n}\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.less'],\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  homeForm: FormGroup;\r\n  audioOnly: boolean;\r\n  url: string = null;\r\n  serverError: boolean = false;\r\n\r\n  loading = {\r\n    mode: loadingMode.unsure,\r\n    percentDone: 0,\r\n    inProgress: true,\r\n  };\r\n  btnDisabled = {\r\n    single: true,\r\n    playlist: true,\r\n  };\r\n\r\n  constructor(private fb: FormBuilder, private converter: ConvertService) {}\r\n\r\n  ngOnInit(): void {\r\n    // Init home page form group\r\n    this.homeForm = this.fb.group({\r\n      url: '',\r\n      passcode: '',\r\n      limitVideos: 10,\r\n    });\r\n    // this.homeForm.get('url').disable();\r\n    this.homeForm.disable();\r\n    this.audioOnly = false;\r\n\r\n    // Watch for changes to the form (i.e. url changes)\r\n    this.homeForm.valueChanges.subscribe((data) => {\r\n      this.handleUrlChange(data.url);\r\n    });\r\n\r\n    // Test if server is up and running\r\n    let serverRes = this.pingServerError();\r\n    serverRes.then((isError) => {\r\n      this.serverError = isError;\r\n      this.loading.inProgress = false;\r\n      if (!isError) this.homeForm.enable();\r\n    });\r\n  }\r\n\r\n  async pingServerError() {\r\n    return await this.converter.pingServer();\r\n  }\r\n\r\n  async downloadSingle() {\r\n    // Begin loading...\r\n    this.loading.mode = loadingMode.unsure;\r\n    this.loading.inProgress = true;\r\n    this.homeForm.disable();\r\n    this.btnDisabled.single = true;\r\n\r\n    // Ping server to test...\r\n    let isError = await this.pingServerError();\r\n    if (isError) {\r\n      this.serverError = isError;\r\n      this.loading.inProgress = false;\r\n      this.btnDisabled.single = false;\r\n      this.homeForm.enable();\r\n\r\n      console.log(isError);\r\n      return;\r\n    }\r\n\r\n    // Begin downloading single video...\r\n    let url: string = this.homeForm.value.url;\r\n    let pass: string = this.homeForm.value.passcode;\r\n    let isValid = await this.converter.validateUrl(url, pass);\r\n\r\n    if (isValid) {\r\n      this.converter.downloadSingle(url, this.audioOnly, pass);\r\n    } else {\r\n      console.log('- Error: Invalid Url or Passcode');\r\n    }\r\n\r\n    this.loading.inProgress = false;\r\n    this.btnDisabled.single = false;\r\n    this.homeForm.enable();\r\n  }\r\n\r\n  async downloadPlaylist() {\r\n    // Begin loading...\r\n    this.loading.percentDone = 0;\r\n    this.loading.mode = loadingMode.buffer;\r\n    this.loading.inProgress = true;\r\n    this.btnDisabled.playlist = true;\r\n\r\n    // Ping server to test...\r\n    let isError = await this.pingServerError();\r\n    if (isError) {\r\n      this.serverError = isError;\r\n      this.loading.inProgress = false;\r\n      this.btnDisabled.playlist = false;\r\n      this.homeForm.enable();\r\n\r\n      console.log(isError);\r\n      return;\r\n    }\r\n\r\n    // Begin downloading playlist...\r\n    let url: string = this.homeForm.value.url;\r\n    let pass: string = this.homeForm.value.passcode;\r\n    let limitVideos: number = Number(this.homeForm.value.limitVideos);\r\n    let isValid = await this.converter.validateUrl(url, pass, false);\r\n\r\n    if (isValid) {\r\n      this.converter.downloadPlaylist(\r\n        url,\r\n        limitVideos,\r\n        this.audioOnly,\r\n        pass,\r\n        this.handleProgressChange\r\n      );\r\n    } else {\r\n      console.log('- Error: Invalid Url or Passcode');\r\n      this.loading.inProgress = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the UI progress bar.\r\n   * @param percent The percent currently completed.\r\n   */\r\n  handleProgressChange = (percent: number, done: boolean = false) => {\r\n    if (done) {\r\n      console.log('-- Done loading');\r\n      this.loading.inProgress = false;\r\n      this.btnDisabled.playlist = false;\r\n      this.homeForm.enable();\r\n      return;\r\n    }\r\n\r\n    // if (percent === NaN) {\r\n    //   console.log('Error: Percent is NaN');\r\n    //   return;\r\n    // }\r\n\r\n    console.log('Updating progress: ' + percent + '%');\r\n    this.loading.percentDone = percent;\r\n\r\n    if (percent >= 100) {\r\n      this.loading.mode = loadingMode.unsure;\r\n      console.log('-- Unsure');\r\n    }\r\n  };\r\n\r\n  handleUrlChange(url: string): void {\r\n    this.url = url;\r\n    url = url.toLowerCase();\r\n    // console.log(url);\r\n    if (!url.includes('youtube.com') && !url.includes('youtu.be')) {\r\n      // Invalid url\r\n      this.btnDisabled.single = true;\r\n      this.btnDisabled.playlist = true;\r\n      return;\r\n    }\r\n\r\n    // Check if url is a playlist or just a single video url.\r\n    if (url.includes('list=', 11) || url.includes('playlist', 11)) {\r\n      this.btnDisabled.playlist = false;\r\n      this.btnDisabled.single = true;\r\n    } else {\r\n      this.btnDisabled.single = false;\r\n      this.btnDisabled.playlist = true;\r\n    }\r\n  }\r\n\r\n  handleAudioOnlyToggle(): void {\r\n    this.audioOnly = !this.audioOnly;\r\n  }\r\n}\r\n","<div class=\"container-outer\">\r\n  <!-- IF(Server Error): Display Error Msg -->\r\n  <h2 *ngIf=\"this.serverError\" style=\"color: red\">\r\n    Sorry, the server cannot be reached at the moment ='(\r\n  </h2>\r\n  <h4 *ngIf=\"this.serverError\" style=\"color: blue\">\r\n    Please try again later today!\r\n  </h4>\r\n  <!-- Form: Url Input -->\r\n  <div id=\"url-form\">\r\n    <form [formGroup]=\"homeForm\">\r\n      <mat-form-field class=\"form\">\r\n        <mat-label class=\"mat-label\">YouTube Url</mat-label>\r\n        <input\r\n          required\r\n          type=\"url\"\r\n          formControlName=\"url\"\r\n          matInput\r\n          #message\r\n          maxlength=\"256\"\r\n          placeholder=\"Ex: www.youtube.com/watch?v=12345\"\r\n        />\r\n        <mat-hint align=\"end\">{{ message.value.length }} / 256</mat-hint>\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n  <!-- Form: Passcode Input -->\r\n  <div id=\"code-form\">\r\n    <form [formGroup]=\"homeForm\" required>\r\n      <mat-form-field class=\"form\">\r\n        <mat-label class=\"mat-label\">Authorization Code</mat-label>\r\n        <input\r\n          required\r\n          type=\"password\"\r\n          formControlName=\"passcode\"\r\n          matInput\r\n          maxlength=\"100\"\r\n        />\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n  <!-- Form: Playlist Limit Input -->\r\n  <div id=\"code-form\">\r\n    <form [formGroup]=\"homeForm\">\r\n      <mat-form-field class=\"form\">\r\n        <mat-label class=\"mat-label\">Playlist Limit</mat-label>\r\n        <input\r\n          type=\"number\"\r\n          formControlName=\"limitVideos\"\r\n          matInput\r\n          maxlength=\"10\"\r\n        />\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n  <!-- Download Controls: Buttons to execute download. -->\r\n  <div class=\"btn-container\">\r\n    <!-- <form [formGroup]=\"homeForm\"> -->\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      type=\"submit\"\r\n      [disabled]=\"this.btnDisabled.single\"\r\n      (click)=\"this.downloadSingle()\"\r\n    >\r\n      Download Video\r\n    </button>\r\n    <!-- </form> -->\r\n    <mat-slide-toggle\r\n      style=\"align-self: center\"\r\n      (change)=\"this.handleAudioOnlyToggle()\"\r\n      >Audio Only</mat-slide-toggle\r\n    >\r\n    <button\r\n      mat-raised-button\r\n      color=\"accent\"\r\n      [disabled]=\"this.btnDisabled.playlist\"\r\n      (click)=\"this.downloadPlaylist()\"\r\n    >\r\n      Downlaod Playlist\r\n    </button>\r\n    <!-- </form> -->\r\n  </div>\r\n  <!-- Loading/Progress Bar -->\r\n  <div id=\"container-progress\" *ngIf=\"this.loading.inProgress\">\r\n    <div id=\"progress-bar\">\r\n      <mat-progress-bar\r\n        color=\"accent\"\r\n        [mode]=\"loading.mode\"\r\n        [value]=\"loading.percentDone\"\r\n      ></mat-progress-bar>\r\n    </div>\r\n  </div>\r\n  <!-- <div>\r\n    <a href=\"{{ this.url }}\" download>Download Now</a>\r\n  </div> -->\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { SseService } from './sse.service';\r\n\r\nimport { _SERVER } from '../const';\r\n\r\n/**\r\n * Backend validation interface.\r\n */\r\ninterface IValidate_BE {\r\n  isValid: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConvertService {\r\n  private serverError = true;\r\n\r\n  constructor(private http: HttpClient, private sseService: SseService) {}\r\n\r\n  async pingServer(): Promise<boolean> {\r\n    let pingError = true;\r\n\r\n    let reqUrl = `${_SERVER.SSL_DOMAIN}/${_SERVER.REQUESTS.TEST}`;\r\n    const headers = new HttpHeaders();\r\n    headers.set('content-type', 'application/json');\r\n\r\n    pingError = await new Promise<boolean>((isError) => {\r\n      this.http\r\n        .get(reqUrl, { headers: headers, observe: 'response' })\r\n        .subscribe(\r\n          (res) => {\r\n            if (res.status === 200) {\r\n              isError(false);\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log('Server NOT Reached (please reach out to the Admin)');\r\n            isError(true);\r\n          }\r\n        );\r\n    });\r\n\r\n    this.serverError = pingError;\r\n    return pingError;\r\n  }\r\n\r\n  encodeQuery(keys: string[], values: any[]) {\r\n    if (keys.length !== values.length || keys.length === 0) {\r\n      return '';\r\n    }\r\n\r\n    let query: string = '';\r\n    keys.forEach((key, keyIndex, keys) => {\r\n      query = query + `${key}=${encodeURIComponent(values[keyIndex])}`;\r\n      if (keyIndex < keys.length) {\r\n        query = query + '&';\r\n      }\r\n    });\r\n\r\n    return query;\r\n  }\r\n\r\n  async validateUrl(url: string, passcode: string, isSingle: boolean = true) {\r\n    if (this.serverError) {\r\n      console.log('Server Error =/');\r\n      return;\r\n    }\r\n\r\n    let query: string = this.encodeQuery(\r\n      ['url', 'isSingle', 'pass'],\r\n      [url, isSingle, passcode]\r\n    );\r\n    let reqUrl: string = `${_SERVER.SSL_DOMAIN}/${_SERVER.REQUESTS.VALIDATE_URL}?${query}`;\r\n\r\n    // console.log(query);\r\n\r\n    const headers = new HttpHeaders();\r\n    headers.set('content-type', 'application/octet-stream');\r\n\r\n    return new Promise<boolean>((isValid) => {\r\n      this.http\r\n        .get(reqUrl, { headers: headers })\r\n        .subscribe((data: IValidate_BE) => {\r\n          isValid(data.isValid);\r\n        });\r\n    });\r\n  }\r\n\r\n  downloadSingle(url: string, audioOnly: boolean, passcode: string) {\r\n    if (this.serverError) {\r\n      console.log('Server Error =/');\r\n      return;\r\n    }\r\n\r\n    let userUrl: string = url;\r\n    let query: string = this.encodeQuery(\r\n      ['url', 'audioOnly', 'pass'],\r\n      [url, audioOnly, passcode]\r\n    );\r\n    let downUrl: string = `${_SERVER.SSL_DOMAIN}/${_SERVER.REQUESTS.SINGLE_DOWNLOAD}?${query}`;\r\n\r\n    // let res = this.http\r\n    //   .get(downUrl, { responseType: 'arraybuffer' })\r\n    //   .subscribe((data) => {\r\n    //     console.log(data);\r\n    //   });\r\n    // console.log(res);\r\n\r\n    // Navigate to the download link.\r\n    // --> Consider changing the href of the Download Single btn and invoking the click event.\r\n    // window.location.href = <string>downUrl;\r\n    window.open(downUrl);\r\n    // return downUrl;\r\n  }\r\n\r\n  /**\r\n   * Initiate download of youtube playlist from a url.\r\n   * @param url\r\n   * @param audioOnly\r\n   * @param passcode\r\n   */\r\n  downloadPlaylist(\r\n    url: string,\r\n    limitVideos: number,\r\n    audioOnly: boolean,\r\n    passcode: string,\r\n    updateUiProgressBar: Function\r\n  ) {\r\n    if (this.serverError) {\r\n      console.log('Server Error =/');\r\n      return;\r\n    }\r\n\r\n    let query = this.encodeQuery(\r\n      ['url', 'audioOnly', 'pass', 'limitVideos'],\r\n      [url, audioOnly, passcode, limitVideos]\r\n    );\r\n    let downUrl = `${_SERVER.SSL_DOMAIN}/${_SERVER.REQUESTS.PLAYLIST_DOWNLOAD}?${query}`;\r\n\r\n    this.sseService.getServerSentEvent(downUrl).subscribe(\r\n      (event) => {\r\n        let data = String(event.data);\r\n\r\n        // Check if data is zip file name.\r\n        if (data.includes('.zip')) {\r\n          // Request zip file from server.\r\n          // window.location.href = downUrl;\r\n          updateUiProgressBar(0, true);\r\n\r\n          // Make another get request for the playlist zip file.\r\n          let playlistFile = data;\r\n          let query = this.encodeQuery(['file'], [playlistFile]);\r\n          let downUrl = `${_SERVER.SSL_DOMAIN}/${_SERVER.REQUESTS.PLAYLIST_FILE}?${query}`;\r\n          window.location.href = downUrl;\r\n          // window.open(downUrl);\r\n          // this.http.get(downUrl)\r\n          return;\r\n        }\r\n\r\n        // Check if data is a number.\r\n        if (Number(data) !== NaN) {\r\n          // Update progress bar.\r\n          updateUiProgressBar(Number(data));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  _downloadPlaylist(url: string, audioOnly: boolean, passcode: string) {\r\n    if (this.serverError) {\r\n      console.log('Server Error =/');\r\n      return;\r\n    }\r\n\r\n    let query: string = this.encodeQuery(\r\n      ['url', 'audioOnly', 'pass'],\r\n      [url, audioOnly, passcode]\r\n    );\r\n    let downUrl: string = `${_SERVER.SSL_DOMAIN}/${_SERVER.REQUESTS.PLAYLIST_DOWNLOAD}?${query}`;\r\n\r\n    window.location.href = downUrl;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less'],\n})\nexport class AppComponent {\n  title = 'Youtube-Converter';\n}\n","<!-- Home Page -->\r\n\r\n<mat-grid-tile-header> </mat-grid-tile-header>\r\n<mat-grid-list cols=\"1\" rowHeight=\"100%\">\r\n  <mat-grid-tile>\r\n    <!-- Navigation Panel -->\r\n    <!-- <div class=\"flex-cont\">\r\n      <div class=\"flex-header\">\r\n        <header>\r\n          <div class=\"container\">\r\n            <a href=\"#\" class=\"logo\">Youtube Converter</a>\r\n            <nav>\r\n              <ul>\r\n                <li><a href=\"#\" routerLink=\"/\">Home</a></li>\r\n                <li><a href=\"#\" routerLink=\"/settings\">Settings</a></li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n      </div> -->\r\n    <!-- <div class=\"flex-main\"> -->\r\n    <app-home-page class=\"flex-main\"></app-home-page>\r\n    <!-- </div> -->\r\n    <!-- </div> -->\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n\r\n<!-- <mat-grid-list cols=\"2\" , rowHeight=\"2:1\">\r\n  <mat-grid-tile>One</mat-grid-tile>\r\n  <mat-grid-tile>\r\n    <app-home-page></app-home-page>\r\n  </mat-grid-tile>\r\n</mat-grid-list> -->\r\n<!-- </div> -->\r\n\r\n<!-- TBA: Web navigation -->\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\n//#region  -- My Stuff -- //\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n//#endregion\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, HomePageComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule,\r\n    MatGridListModule,\r\n    MatButtonModule,\r\n    MatSlideToggleModule,\r\n    MatProgressBarModule,\r\n    MatCardModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class AppModule {}\r\n","export const _SERVER = {\r\n  SSL_DOMAIN: 'http://localhost:8000', // Need to update when new domain is created from ngrok backend.\r\n  DOMAIN: 'http://localhost:8000',\r\n  REQUESTS: {\r\n    SINGLE_DOWNLOAD: 'single',\r\n    PLAYLIST_DOWNLOAD: 'playlist',\r\n    PLAYLIST_FILE: 'playlist/file',\r\n    VALIDATE_URL: 'validate',\r\n    TEST: 'test',\r\n  },\r\n};\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SseService {\r\n  constructor(private _zone: NgZone) {}\r\n\r\n  getServerSentEvent(url: string): Observable<any> {\r\n    return Observable.create((observer) => {\r\n      const eventSource = this.getEventSource(url);\r\n      eventSource.onopen = (ev) => {\r\n        console.log('-- Open Connection --');\r\n      };\r\n\r\n      eventSource.addEventListener('complete', (event) => {\r\n        console.log('-- Closing --');\r\n        observer.next(event); // Playlist file name should be received here.\r\n        eventSource.close();\r\n      });\r\n      // On message from server.\r\n      eventSource.onmessage = (event) => {\r\n        this._zone.run(() => {\r\n          observer.next(event);\r\n        });\r\n      };\r\n      // On error.\r\n      eventSource.onerror = (error) => {\r\n        this._zone.run(() => {\r\n          console.log(`SSE Error:`);\r\n          console.log(error);\r\n          observer.error(error);\r\n        });\r\n      };\r\n    });\r\n  }\r\n\r\n  private getEventSource(url: string): EventSource {\r\n    return new EventSource(url);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomePageComponent } from './home-page/home-page.component';\n\nconst routes: Routes = [{ path: 'home', component: HomePageComponent }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}