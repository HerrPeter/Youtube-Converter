{"version":3,"sources":["./src/environments/environment.ts","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/convert.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/const.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ConvertService } from '../convert.service';\r\n\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.less'],\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  homeForm: FormGroup;\r\n  audioOnly: boolean;\r\n  url: string = null;\r\n\r\n  constructor(private fb: FormBuilder, private converter: ConvertService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.homeForm = this.fb.group({\r\n      url: '',\r\n    });\r\n    this.audioOnly = false;\r\n  }\r\n\r\n  async downloadSingle() {\r\n    let isValid = await this.converter.validateUrl(this.homeForm.value.url);\r\n\r\n    if (isValid) {\r\n      let downUrl = this.converter.downloadSingle(\r\n        this.homeForm.value.url,\r\n        this.audioOnly\r\n      );\r\n      // this.homeForm.setValue({url: downUrl})\r\n      // this.url = downUrl;\r\n    } else {\r\n      console.log('- Error: Invalid Url');\r\n    }\r\n  }\r\n\r\n  async downloadPlaylist() {\r\n    let isValid = await this.converter.validateUrl(\r\n      this.homeForm.value.url,\r\n      false\r\n    );\r\n\r\n    if (isValid) {\r\n      this.converter.downloadPlaylist(this.homeForm.value.url, this.audioOnly);\r\n    } else {\r\n      console.log('- Error: Invalid Url');\r\n    }\r\n  }\r\n\r\n  handleUrlChange(url: string): void {\r\n    this.url = url;\r\n  }\r\n\r\n  handleAudioOnlyToggle(): void {\r\n    this.audioOnly = !this.audioOnly;\r\n  }\r\n}\r\n","<!-- <p>home-page works!</p> -->\r\n\r\n<div class=\"container-outer\">\r\n  <form class=\"example-form\" [formGroup]=\"homeForm\">\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label style=\"color: black\">YouTube Url</mat-label>\r\n      <input\r\n        type=\"url\"\r\n        formControlName=\"url\"\r\n        matInput\r\n        #message\r\n        maxlength=\"256\"\r\n        placeholder=\"Ex: www.youtube.com/watch?v=12345\"\r\n      />\r\n      <mat-hint align=\"end\">{{ message.value.length }} / 256</mat-hint>\r\n    </mat-form-field>\r\n  </form>\r\n  <div class=\"container\">\r\n    <button mat-raised-button color=\"primary\" (click)=\"this.downloadSingle()\">\r\n      Download Single\r\n    </button>\r\n    <mat-slide-toggle\r\n      style=\"align-self: center\"\r\n      (change)=\"this.handleAudioOnlyToggle()\"\r\n      >Audio Only</mat-slide-toggle\r\n    >\r\n    <button mat-raised-button color=\"accent\" (click)=\"this.downloadPlaylist()\">\r\n      Downlaod Playlist\r\n    </button>\r\n  </div>\r\n  <!-- <div>\r\n    <a href=\"{{ this.url }}\" download>Download Now</a>\r\n  </div> -->\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { _SERVER } from '../const';\r\n\r\ninterface IValidate_BE {\r\n  isValid: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConvertService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  async validateUrl(url: string, isSingle: boolean = true) {\r\n    let reqUrl: string = `${_SERVER.DOMAIN}/${_SERVER.REQUESTS.VALIDATE_URL}?url=${url}&isSingle=${isSingle}`;\r\n\r\n    const headers = new HttpHeaders();\r\n    headers.set('content-type', 'application/octet-stream');\r\n\r\n    return new Promise<boolean>((isValid) => {\r\n      this.http\r\n        .get(reqUrl, { headers: headers })\r\n        .subscribe((data: IValidate_BE) => {\r\n          isValid(data.isValid);\r\n        });\r\n    });\r\n  }\r\n\r\n  downloadSingle(url: string, audioOnly: boolean) {\r\n    let userUrl: string = url;\r\n    let downUrl: string = `${_SERVER.DOMAIN}/${_SERVER.REQUESTS.SINGLE_DOWNLOAD}?url=${userUrl}&audioOnly=${audioOnly}`;\r\n\r\n    // let res = this.http\r\n    //   .get(downUrl, { responseType: 'arraybuffer' })\r\n    //   .subscribe((data) => {\r\n    //     console.log(data);\r\n    //   });\r\n    // console.log(res);\r\n\r\n    // Navigate to the download link.\r\n    // --> Consider changing the href of the Download Single btn and invoking the click event.\r\n    // window.location.href = <string>downUrl;\r\n    window.open(downUrl);\r\n    // return downUrl;\r\n  }\r\n\r\n  downloadPlaylist(url: string, audioOnly: boolean) {\r\n    let userUrl: string = url;\r\n    let downUrl: string = `${_SERVER.DOMAIN}/${_SERVER.REQUESTS.PLAYLIST_DOWNLOAD}?url=${userUrl}&audioOnly=${audioOnly}`;\r\n\r\n    window.location.href = downUrl;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less'],\n})\nexport class AppComponent {\n  title = 'Youtube-Converter';\n}\n","<!-- Home Page -->\r\n\r\n<mat-grid-tile-header> </mat-grid-tile-header>\r\n<mat-grid-list cols=\"1\" rowHeight=\"100%\">\r\n  <mat-grid-tile>\r\n    <!-- Navigation Panel -->\r\n    <!-- <div class=\"flex-cont\">\r\n      <div class=\"flex-header\">\r\n        <header>\r\n          <div class=\"container\">\r\n            <a href=\"#\" class=\"logo\">Youtube Converter</a>\r\n            <nav>\r\n              <ul>\r\n                <li><a href=\"#\" routerLink=\"/\">Home</a></li>\r\n                <li><a href=\"#\" routerLink=\"/settings\">Settings</a></li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n      </div> -->\r\n    <!-- <div class=\"flex-main\"> -->\r\n    <app-home-page class=\"flex-main\"></app-home-page>\r\n    <!-- </div> -->\r\n    <!-- </div> -->\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n\r\n<!-- <mat-grid-list cols=\"2\" , rowHeight=\"2:1\">\r\n  <mat-grid-tile>One</mat-grid-tile>\r\n  <mat-grid-tile>\r\n    <app-home-page></app-home-page>\r\n  </mat-grid-tile>\r\n</mat-grid-list> -->\r\n<!-- </div> -->\r\n\r\n<!-- TBA: Web navigation -->\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\n//#region  -- My Stuff -- //\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n//#endregion\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, HomePageComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule,\r\n    MatGridListModule,\r\n    MatButtonModule,\r\n    MatSlideToggleModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class AppModule {}\r\n","export const _SERVER = {\r\n  SSL_DOMAIN: 'https://192.168.1.67:443', // Need to replace localhost w/ host ip for production.\r\n  DOMAIN: 'http://192.168.1.67:3333',\r\n  REQUESTS: {\r\n    SINGLE_DOWNLOAD: 'single',\r\n    PLAYLIST_DOWNLOAD: 'playlist',\r\n    VALIDATE_URL: 'validate',\r\n  },\r\n};\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomePageComponent } from './home-page/home-page.component';\n\nconst routes: Routes = [{ path: 'home', component: HomePageComponent }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}